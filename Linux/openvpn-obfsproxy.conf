# We are the client
client

# We will fetch the routing tables from the server
pull

# The virtual network interface type
dev tun

# We connect to a TCP server
proto tcp

# The tunnel endpoint public IP address and port to connect to
# NOTE: Replace with your settings!
remote ENDPOINT_IP ENDPOINT_PORT

# The local obfsproxy address
# NOTE: Replace with your own values!
socks-proxy 127.0.0.1 5050

# This is required to avoid killing the connection to the endpoint
# NOTE: 'net_gateway' should not be replaced
route ENDPOINT_IP 255.255.255.255 net_gateway

# Update DNS configuration at VPN start and stop
up dns-up.sh
down dns-down.sh

# Never give up DNS resolution of the endpoint's hostname (in case it's a hostname and not an IP)
resolv-retry infinite

# Keep everything in place in case we restart after disconnection
persist-key
persist-tun

# Optionnal: if your VPN endpoint uses login/password
script-security 3
auth-user-pass

# Path to the root certificate to authenticate the server
ca wnh-ca.crt

# Compression, restart options and debug verbosity
comp-lzo
ping 5
ping-restart 10
verb 3

